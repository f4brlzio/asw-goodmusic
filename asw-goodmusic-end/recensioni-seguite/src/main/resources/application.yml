# application.yml 
--- 
spring: 
  application: 
    name: recensioni-seguite
  cloud:
    consul:
      host: asw-consul
      # host: localhost
      port: 8500
      discovery: 
        instanceId: ${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        # configurazione per effettuare esprimenti, NON USARE UN PRODUZIONE 
        # dopo quanto tempo consul deve smettere di restituire servizi che non rispondono all'health check? 
        healthCheckCriticalTimeout: 45s
        # consul deve restituire solo servizi che passano l'health check (default=false) 
        queryPassing: true 
    loadbalancer: 
      ribbon.enabled: false
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://recensioni-seguite-db:5432/recensioniSeguiteDb
    username: postgres
    password: postgres
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop

asw:
  goodmusic:
    recensioni-seguite:
      bootstrap-servers: "kafka-container:9092"
      group-id:
        connessioni: connessioniConnessioniSeguite
        recensioni: connessioniRecensioniSeguite
      trusted-packages:
        connessioni: "asw.goodmusic.connessioni.api.kafka"
        recensioni: "asw.goodmusic.recensioni.api.kafka"

server: 
  # port: ${PORT:${SERVER_PORT:0}}
  port: 8080
  # per swagger, se dietro a un api gateway 
  forward-headers-strategy: framework



# fa il logging dei comandi sql eseguiti 
#spring.jpa.show-sql: true
# disable OSIV
spring.jpa.open-in-view: false


